[{"C:\\Users\\ethan\\JSProjects\\CEN4721Project\\frontend\\src\\index.js":"1","C:\\Users\\ethan\\JSProjects\\CEN4721Project\\frontend\\src\\App.js":"2","C:\\Users\\ethan\\JSProjects\\CEN4721Project\\frontend\\src\\reducers\\index.js":"3","C:\\Users\\ethan\\JSProjects\\CEN4721Project\\frontend\\src\\components\\CalendarView\\CalendarView.js":"4","C:\\Users\\ethan\\JSProjects\\CEN4721Project\\frontend\\src\\components\\Header\\Header.js":"5","C:\\Users\\ethan\\JSProjects\\CEN4721Project\\frontend\\src\\reducers\\events.js":"6","C:\\Users\\ethan\\JSProjects\\CEN4721Project\\frontend\\src\\components\\CalendarView\\styles.js":"7","C:\\Users\\ethan\\JSProjects\\CEN4721Project\\frontend\\src\\components\\Header\\styles.js":"8","C:\\Users\\ethan\\JSProjects\\CEN4721Project\\frontend\\src\\components\\CalendarView\\SubmitForm\\SubmitForm.js":"9","C:\\Users\\ethan\\JSProjects\\CEN4721Project\\frontend\\src\\actions\\events.js":"10","C:\\Users\\ethan\\JSProjects\\CEN4721Project\\frontend\\src\\components\\CalendarView\\Events\\Events.js":"11","C:\\Users\\ethan\\JSProjects\\CEN4721Project\\frontend\\src\\constants\\actionTypes.js":"12","C:\\Users\\ethan\\JSProjects\\CEN4721Project\\frontend\\src\\api\\index.js":"13","C:\\Users\\ethan\\JSProjects\\CEN4721Project\\frontend\\src\\components\\CalendarView\\SubmitForm\\styles.js":"14","C:\\Users\\ethan\\JSProjects\\CEN4721Project\\frontend\\src\\components\\CalendarView\\SubmitForm\\TimeMenu\\TimeMenu.js":"15","C:\\Users\\ethan\\JSProjects\\CEN4721Project\\frontend\\src\\components\\CalendarView\\SubmitForm\\DateSelector\\DateSelector.js":"16","C:\\Users\\ethan\\JSProjects\\CEN4721Project\\frontend\\src\\components\\CalendarView\\Events\\Event\\Event.js":"17","C:\\Users\\ethan\\JSProjects\\CEN4721Project\\frontend\\src\\components\\CalendarView\\SubmitForm\\TimeMenu\\styles.js":"18","C:\\Users\\ethan\\JSProjects\\CEN4721Project\\frontend\\src\\components\\VoiceRecorder\\VoiceRecorder.js":"19","C:\\Users\\ethan\\JSProjects\\CEN4721Project\\frontend\\src\\components\\VoiceRecorder\\BacklogItem.js":"20"},{"size":888,"mtime":1616191133441,"results":"21","hashOfConfig":"22"},{"size":1298,"mtime":1616463974346,"results":"23","hashOfConfig":"22"},{"size":702,"mtime":1616459307644,"results":"24","hashOfConfig":"22"},{"size":1763,"mtime":1616459880759,"results":"25","hashOfConfig":"22"},{"size":1675,"mtime":1616460573867,"results":"26","hashOfConfig":"22"},{"size":615,"mtime":1616461856619,"results":"27","hashOfConfig":"22"},{"size":295,"mtime":1616278502842,"results":"28","hashOfConfig":"22"},{"size":454,"mtime":1616459307642,"results":"29","hashOfConfig":"22"},{"size":4246,"mtime":1616459880761,"results":"30","hashOfConfig":"22"},{"size":1166,"mtime":1616459307636,"results":"31","hashOfConfig":"22"},{"size":1965,"mtime":1616459880760,"results":"32","hashOfConfig":"22"},{"size":188,"mtime":1616459307643,"results":"33","hashOfConfig":"22"},{"size":840,"mtime":1616459307637,"results":"34","hashOfConfig":"22"},{"size":505,"mtime":1616459880762,"results":"35","hashOfConfig":"22"},{"size":1669,"mtime":1616459307640,"results":"36","hashOfConfig":"22"},{"size":4145,"mtime":1616459880761,"results":"37","hashOfConfig":"22"},{"size":327,"mtime":1616459880759,"results":"38","hashOfConfig":"22"},{"size":328,"mtime":1616459307641,"results":"39","hashOfConfig":"22"},{"size":2098,"mtime":1616464688676,"results":"40","hashOfConfig":"22"},{"size":330,"mtime":1616463638155,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1jxyx4e",{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\ethan\\JSProjects\\CEN4721Project\\frontend\\src\\index.js",[],["90","91"],"C:\\Users\\ethan\\JSProjects\\CEN4721Project\\frontend\\src\\App.js",["92","93"],"//Styling\r\n\r\n//import Components\r\nimport CalendarView from './components/CalendarView/CalendarView';\r\nimport Header from './components/Header/Header';\r\nimport {React} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Grid, Button } from '@material-ui/core';\r\nimport BacklogItem from './components/VoiceRecorder/BacklogItem.js'\r\n\r\nconst App = () => {\r\n    const events = useSelector((state) => {\r\n        let events = [];\r\n        state.events.map((event) => { if (event.title === \"BACKLOG\") { events.push(event) } });\r\n        return events;\r\n    });\r\n    //https://reactjs.org/docs/hooks-reference.html#usestateuse\r\n    //const [currentId, setCurrentId] = useState(0);\r\n\r\n    //https://react-redux.js.org/api/hooks\r\n    //const dispatch = useDispatch();\r\n\r\n\r\n    //https://reactjs.org/docs/hooks-reference.html#useeffect\r\n    /*useEffect(() => {\r\n        dispatch(getEvents());\r\n    }, [dispatch]);*/\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <CalendarView/>\r\n            {events.map((event) => (\r\n                        <Grid key={event.description} item xs={12} sm={6} md={6}>\r\n                            <BacklogItem event={event} />\r\n                        </Grid>\r\n                    ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\ethan\\JSProjects\\CEN4721Project\\frontend\\src\\reducers\\index.js",[],"C:\\Users\\ethan\\JSProjects\\CEN4721Project\\frontend\\src\\components\\CalendarView\\CalendarView.js",["94","95","96"],"//importing from main npm's\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Button, Grid} from '@material-ui/core';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n//importing specific npm's and components\r\nimport Calendar from 'react-calendar';\r\nimport SubmitForm from './SubmitForm/SubmitForm';\r\nimport Events from './Events/Events';\r\n\r\n//importing requests\r\nimport { getEvents } from '../../actions/events';\r\n\r\n//importing styling\r\nimport useStyles from './styles';\r\nimport './Calendar.css'\r\n\r\nconst CalendarView = () => {\r\n    const [currentId, setCurrentId] = useState(0);\r\n    const [date, setDate] = useState(new Date());\r\n    const [addEvent, setAddEvent] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        dispatch(getEvents());\r\n    }, [currentId, dispatch]);\r\n\r\n    return (\r\n        <div>\r\n            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={2}>\r\n                <Grid item>\r\n                    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={2}>\r\n                        <Grid item>\r\n                            <SubmitForm currentId={currentId} setCurrentId={setCurrentId} date={ date }/>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Calendar onChange={setDate} value={date} />\r\n                            <Events setCurrentId={setCurrentId} date={ date } />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button>HIHIHIHIHIH</Button>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CalendarView;\r\n","C:\\Users\\ethan\\JSProjects\\CEN4721Project\\frontend\\src\\components\\Header\\Header.js",["97","98"],"import React, { useState, useEffect } from 'react';\r\nimport VoiceRecorder from '../VoiceRecorder/VoiceRecorder.js'\r\nimport { Paper, Grid, Button, TextField } from '@material-ui/core';\r\nimport { SearchOutlined, Mic, HelpOutline, Settings } from '@material-ui/icons';\r\nimport useStyles from './styles';\r\n\r\nconst Header = () => {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n      };\r\n    \r\n      const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n    return (\r\n        <div>\r\n            <Paper className={classes.paper}>\r\n                <Grid container justify=\"flex-end\" spacing=\"0\" className={classes.grid}>\r\n                    <Grid item xs={5}>\r\n                        <Button className={classes.buttons}><SearchOutlined className={classes.icons} />\r\n                        </Button>\r\n                        <TextField color=\"secondary\" InputProps={{ className: classes.textfield }} InputLabelProps={{ className: classes.textfield }} label=\"Search\" variant=\"outlined\" >\r\n                        </TextField>\r\n                    </Grid>\r\n                    <Button className={classes.buttons} onClick={handleClickOpen}> <Mic className={classes.icons} /> </Button>\r\n                    <Button className={classes.buttons} > <HelpOutline className={classes.icons} /> </Button>\r\n                    <Button className={classes.buttons} > <Settings className={classes.icons} /> </Button>\r\n                </Grid>\r\n            </Paper>\r\n            <VoiceRecorder open={open} onClose={handleClose} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","C:\\Users\\ethan\\JSProjects\\CEN4721Project\\frontend\\src\\reducers\\events.js",["99"],"import { CREATE_EVENT, UPDATE_EVENT, DELETE_EVENT, FETCH_DATE_EVENTS } from '../constants/actionTypes';\r\n\r\nexport default (events = [], action) => {\r\n    switch (action.type) {\r\n        case FETCH_DATE_EVENTS:\r\n            return action.payload;\r\n        case CREATE_EVENT:\r\n            return [...events, action.payload];\r\n        case UPDATE_EVENT:\r\n            return events.map((event) => (event._id === action.payload._id ? action.payload : event));\r\n        case DELETE_EVENT:\r\n            return events.filter((event) => event._id !== action.payload);\r\n        default:\r\n            return events;\r\n    }\r\n};","C:\\Users\\ethan\\JSProjects\\CEN4721Project\\frontend\\src\\components\\CalendarView\\styles.js",[],"C:\\Users\\ethan\\JSProjects\\CEN4721Project\\frontend\\src\\components\\Header\\styles.js",[],"C:\\Users\\ethan\\JSProjects\\CEN4721Project\\frontend\\src\\components\\CalendarView\\SubmitForm\\SubmitForm.js",["100","101"],"import { useState, useEffect } from 'react';\r\nimport { Paper, TextField, Grid, Button } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport useStyles from './styles';\r\nimport TimeMenu from './TimeMenu/TimeMenu';\r\nimport DateSelector from './DateSelector/DateSelector'\r\n\r\nimport { createEvent, updateEvent } from '../../../actions/events';\r\n\r\nconst SubmitForm = ({ currentId, setCurrentId, date }) => {\r\n    const [eventData, setEventData] = useState({ title: '', date: toStringDate(), description: '', startTime: '',endTime: '' });\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n\r\n    function toStringDate() {\r\n        const stringDate = numberToMonth(date.getMonth()) + date.getDate().toString() + date.getFullYear().toString();\r\n        return stringDate;\r\n    }\r\n\r\n    function numberToMonth(number) {\r\n        switch (number) {\r\n            case 0:\r\n                return \"Janurary\";\r\n            case 1:\r\n                return \"February\";\r\n            case 2:\r\n                return 'March';\r\n            case 3:\r\n                return 'April';\r\n            case 4:\r\n                return 'May';\r\n            case 5:\r\n                return 'June';\r\n            case 6:\r\n                return 'July';\r\n            case 7:\r\n                return 'August';\r\n            case 8:\r\n                return 'September';\r\n            case 9:\r\n                return 'October';\r\n            case 10:\r\n                return 'November';\r\n            case 11:\r\n                return 'Decemeber';\r\n            default:\r\n                return \"?\";\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const newDate = numberToMonth(date.getMonth()) + date.getDate().toString() + date.getFullYear().toString();\r\n        setEventData({ ...eventData, date: newDate });\r\n    }, [date]);\r\n\r\n    const clear = () => {\r\n        document.getElementById(\"SubmitFormTitle\").value = \"\";\r\n        document.getElementById(\"SubmitFormDescription\").value = \"\";\r\n        setCurrentId(0);\r\n        setEventData({ title: '',\r\n            date: '',\r\n            description: '',\r\n            startTime: '',\r\n            endTime: '' });\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n        //Check Title\r\n        //Check Time\r\n\r\n\r\n\r\n        if (currentId === 0) {\r\n            dispatch(createEvent(eventData));\r\n            clear();\r\n        } else {\r\n            dispatch(updateEvent(currentId, eventData));\r\n            clear();\r\n        }\r\n    };\r\n\r\n    const callbackFunction = (time) => {\r\n        setEventData({ ...eventData, startTime: time });\r\n    }\r\n    const callbackFunction2 = (time) => {\r\n        setEventData({ ...eventData, endTime: time });\r\n    }\r\n\r\n    return (\r\n        <Paper className={ classes.paper }>\r\n            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" className={ classes.grid }>\r\n                <Grid className={ classes.title }>\r\n                    <TextField id=\"SubmitFormTitle\" variant=\"outlined\" label=\"Title\" onChange={(e) => setEventData({ ...eventData, title: e.target.value })}/>\r\n                </Grid>\r\n                <Grid item className={classes.time} >\r\n                    <DateSelector id=\"DateSelector\" date={date} eventData={eventData} setEventData={setEventData} numberToMonth={ numberToMonth }/>\r\n                </Grid>\r\n                <Grid item className={classes.description} >\r\n                    <TextField id=\"SubmitFormDescription\" multiline variant=\"outlined\" label=\"Description\" onChange={(e) => setEventData({ ...eventData, description: e.target.value })}/>\r\n                </Grid>\r\n                <Grid item className={classes.time} >\r\n                    <TimeMenu name=\"Start Time\" callBack={callbackFunction} />\r\n                     - \r\n                    <TimeMenu name=\"End Time\" callBack={callbackFunction2}/>\r\n                </Grid>\r\n                <Grid item className={classes.time} >\r\n                    <Button className={classes.button} children=\"Cancel\" />\r\n                    <Button className={classes.button} children=\"Sumbit\" onClick={ handleSubmit }/>\r\n                </Grid>\r\n            </Grid>\r\n            \r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default SubmitForm;","C:\\Users\\ethan\\JSProjects\\CEN4721Project\\frontend\\src\\actions\\events.js",[],"C:\\Users\\ethan\\JSProjects\\CEN4721Project\\frontend\\src\\components\\CalendarView\\Events\\Events.js",["102","103","104","105"],"import React from 'react';\r\nimport { Grid, CircularProgress,Button, Typography } from '@material-ui/core';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Event from './Event/Event';\r\n\r\nconst Events = ({ setCurrentId, date }) => {\r\n    const events = useSelector((state) => {\r\n        let events = [];\r\n        const dateChecker = numberToMonth(date.getMonth()) + date.getDate() + date.getFullYear();\r\n        state.events.map((event) => { if (event.date === dateChecker) { events.push(event) } });\r\n        console.log(events);\r\n        return events;\r\n    });\r\n    function numberToMonth(number) {\r\n        switch (number) {\r\n            case 0:\r\n                return \"Janurary\";\r\n            case 1:\r\n                return \"February\";\r\n            case 2:\r\n                return 'March';\r\n            case 3:\r\n                return 'April';\r\n            case 4:\r\n                return 'May';\r\n            case 5:\r\n                return 'June';\r\n            case 6:\r\n                return 'July';\r\n            case 7:\r\n                return 'August';\r\n            case 8:\r\n                return 'September';\r\n            case 9:\r\n                return 'October';\r\n            case 10:\r\n                return 'November';\r\n            case 11:\r\n                return 'Decemeber';\r\n            default:\r\n                return \"?\";\r\n        }\r\n    }\r\n    \r\n    const h = () => {\r\n        console.log(events);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!events.length ? <Typography>No Events For This Day</Typography> : (\r\n                <Grid container alignItems=\"stretch\" spacing={3}>\r\n                    {events.map((event) => (\r\n                        <Grid key={event._id} item xs={12} sm={6} md={6}>\r\n                            <Event event={event} setCurrentId={setCurrentId} />\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            )}\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Events;","C:\\Users\\ethan\\JSProjects\\CEN4721Project\\frontend\\src\\constants\\actionTypes.js",[],"C:\\Users\\ethan\\JSProjects\\CEN4721Project\\frontend\\src\\api\\index.js",[],"C:\\Users\\ethan\\JSProjects\\CEN4721Project\\frontend\\src\\components\\CalendarView\\SubmitForm\\styles.js",[],"C:\\Users\\ethan\\JSProjects\\CEN4721Project\\frontend\\src\\components\\CalendarView\\SubmitForm\\TimeMenu\\TimeMenu.js",[],"C:\\Users\\ethan\\JSProjects\\CEN4721Project\\frontend\\src\\components\\CalendarView\\SubmitForm\\DateSelector\\DateSelector.js",["106"],"import { useState, useEffect } from 'react';\r\nimport { Menu, Button, MenuItem } from '@material-ui/core';\r\n\r\nconst monthes = [\r\n    'Janurary',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'Decemeber'\r\n];\r\n\r\nconst dates = [\r\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\r\n    11, 12, 13, 14, 15, 16, 17, 18, 19,\r\n    20, 21, 22, 23, 24, 25, 26, 27, 28, 29,\r\n    30, 31\r\n];\r\n\r\nconst years = [\r\n    \"2020\",\r\n    \"2021\",\r\n    \"2022\",\r\n    \"2023\"\r\n];\r\n\r\nconst DateSelector = ({ date, setEventData, eventData, numberToMonth  }) =>{\r\n    const [monthAnchor, setMonthAnchor] = useState(null);\r\n    const [dateAnchor, setDayAnchor] = useState(null);\r\n    const [yearAnchor, setYearAnchor] = useState(null);\r\n    const [m, setMonth] = useState(numberToMonth(date.getMonth()));\r\n    const [d, setDay] = useState(date.getDate().toString());\r\n    const [y, setYear] = useState(date.getFullYear().toString());\r\n\r\n    useEffect(() => {\r\n        setMonth(numberToMonth(date.getMonth()));\r\n        setDay(date.getDate().toString());\r\n        setYear(date.getFullYear().toString());\r\n    }, [date]);\r\n\r\n    function setDate(month, day, year) {\r\n        const newDate = month.toString() + day.toString() + year.toString();\r\n        setEventData({ ...eventData, date: newDate });\r\n    }\r\n\r\n    //////////\r\n    const handleDClick = (event) => { setDayAnchor(event.currentTarget); };\r\n    const handleMClick = (event) => { setMonthAnchor(event.currentTarget); };\r\n    const handleYClick = (event) => { setYearAnchor(event.currentTarget); };\r\n    \r\n    const handleDClose = () => { setDayAnchor(null); };\r\n    const handleMClose = () => { setMonthAnchor(null); };\r\n    const handleYClose = () => { setYearAnchor(null); };\r\n    ////////////////\r\n\r\n    const handleDayClick = (event) => {\r\n        setDay(event.target.textContent);\r\n        handleDClose();\r\n        setDate(m, event.target.textContent, y);\r\n    };\r\n    const handleMonthClick = (event) => {\r\n        setMonth(event.target.textContent);\r\n        handleMClose();\r\n        setDate(event.target.textContent, d, y);\r\n    };\r\n    const handleYearClick = (event) => {\r\n        setYear(event.target.textContent);\r\n        handleYClose();\r\n        setDate(m, d, event.target.textContent);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button children={m} aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleMClick} />\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={monthAnchor}\r\n                keepMounted\r\n                open={Boolean(monthAnchor)}\r\n                onClose={handleMClose}\r\n                PaperProps={{ style: { maxHeight: 200 } }}\r\n            >\r\n                {monthes.map((month) => (\r\n                    <MenuItem key={month.toString()} children={month} onClick={handleMonthClick} />\r\n                ))}\r\n\r\n            </Menu>\r\n            <Button children={d.toString()} aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleDClick} />\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={dateAnchor}\r\n                keepMounted\r\n                open={Boolean(dateAnchor)}\r\n                onClose={handleDClose}\r\n                PaperProps={{ style: { maxHeight: 200 } }}\r\n            >\r\n                {dates.map((date) => (\r\n                    <MenuItem key={date.toString()} children={date} onClick={handleDayClick} />\r\n                ))}\r\n\r\n            </Menu>\r\n            <Button children={y} aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleYClick} />\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={yearAnchor}\r\n                keepMounted\r\n                open={Boolean(yearAnchor)}\r\n                onClose={handleYClose}\r\n                PaperProps={{ style: { maxHeight: 200 } }}\r\n            >\r\n                {years.map((year) => (\r\n                    <MenuItem key={ year.toString() } children={year} onClick={handleYearClick} />\r\n                ))}\r\n\r\n            </Menu>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DateSelector;","C:\\Users\\ethan\\JSProjects\\CEN4721Project\\frontend\\src\\components\\CalendarView\\Events\\Event\\Event.js",[],"C:\\Users\\ethan\\JSProjects\\CEN4721Project\\frontend\\src\\components\\CalendarView\\SubmitForm\\TimeMenu\\styles.js",[],"C:\\Users\\ethan\\JSProjects\\CEN4721Project\\frontend\\src\\components\\VoiceRecorder\\VoiceRecorder.js",["107","108","109","110"],"C:\\Users\\ethan\\JSProjects\\CEN4721Project\\frontend\\src\\components\\VoiceRecorder\\BacklogItem.js",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":8,"column":16,"nodeType":"117","messageId":"118","endLine":8,"endColumn":22},{"ruleId":"119","severity":1,"message":"120","line":14,"column":34,"nodeType":"121","messageId":"122","endLine":14,"endColumn":36},{"ruleId":"115","severity":1,"message":"123","line":21,"column":12,"nodeType":"117","messageId":"118","endLine":21,"endColumn":20},{"ruleId":"115","severity":1,"message":"124","line":21,"column":22,"nodeType":"117","messageId":"118","endLine":21,"endColumn":33},{"ruleId":"115","severity":1,"message":"125","line":24,"column":11,"nodeType":"117","messageId":"118","endLine":24,"endColumn":18},{"ruleId":"115","severity":1,"message":"126","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":25},{"ruleId":"115","severity":1,"message":"127","line":1,"column":27,"nodeType":"117","messageId":"118","endLine":1,"endColumn":36},{"ruleId":"128","severity":1,"message":"129","line":3,"column":1,"nodeType":"130","endLine":16,"endColumn":3},{"ruleId":"115","severity":1,"message":"131","line":3,"column":23,"nodeType":"117","messageId":"118","endLine":3,"endColumn":34},{"ruleId":"132","severity":1,"message":"133","line":55,"column":8,"nodeType":"134","endLine":55,"endColumn":14,"suggestions":"135"},{"ruleId":"115","severity":1,"message":"136","line":2,"column":16,"nodeType":"117","messageId":"118","endLine":2,"endColumn":32},{"ruleId":"115","severity":1,"message":"116","line":2,"column":33,"nodeType":"117","messageId":"118","endLine":2,"endColumn":39},{"ruleId":"119","severity":1,"message":"120","line":11,"column":34,"nodeType":"121","messageId":"122","endLine":11,"endColumn":36},{"ruleId":"115","severity":1,"message":"137","line":46,"column":11,"nodeType":"117","messageId":"118","endLine":46,"endColumn":12},{"ruleId":"132","severity":1,"message":"138","line":45,"column":8,"nodeType":"134","endLine":45,"endColumn":14,"suggestions":"139"},{"ruleId":"115","severity":1,"message":"127","line":1,"column":27,"nodeType":"117","messageId":"118","endLine":1,"endColumn":36},{"ruleId":"115","severity":1,"message":"131","line":9,"column":23,"nodeType":"117","messageId":"118","endLine":9,"endColumn":34},{"ruleId":"115","severity":1,"message":"140","line":10,"column":23,"nodeType":"117","messageId":"118","endLine":10,"endColumn":34},{"ruleId":"115","severity":1,"message":"141","line":16,"column":25,"nodeType":"117","messageId":"118","endLine":16,"endColumn":40},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'addEvent' is assigned a value but never used.","'setAddEvent' is assigned a value but never used.","'classes' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useSelector' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'eventData'. Either include it or remove the dependency array. You can also do a functional update 'setEventData(e => ...)' if you only need 'eventData' in the 'setEventData' call.","ArrayExpression",["144"],"'CircularProgress' is defined but never used.","'h' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'numberToMonth'. Either include it or remove the dependency array. If 'numberToMonth' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["145"],"'updateEvent' is defined but never used.","'resetTranscript' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},"Update the dependencies array to be: [date, eventData]",{"range":"150","text":"151"},"Update the dependencies array to be: [date, numberToMonth]",{"range":"152","text":"153"},[1840,1846],"[date, eventData]",[1172,1178],"[date, numberToMonth]"]