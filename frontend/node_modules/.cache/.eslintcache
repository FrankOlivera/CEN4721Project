[{"C:\\Users\\FRANQ\\Desktop\\CEN3031\\CEN-VCSB-Project\\front\\src\\index.js":"1","C:\\Users\\FRANQ\\Desktop\\CEN3031\\CEN-VCSB-Project\\front\\src\\App.js":"2","C:\\Users\\FRANQ\\Desktop\\CEN3031\\CEN-VCSB-Project\\front\\src\\reducers\\index.js":"3","C:\\Users\\FRANQ\\Desktop\\CEN3031\\CEN-VCSB-Project\\front\\src\\pages\\People.js":"4","C:\\Users\\FRANQ\\Desktop\\CEN3031\\CEN-VCSB-Project\\front\\src\\pages\\PageNavigation.js":"5","C:\\Users\\FRANQ\\Desktop\\CEN3031\\CEN-VCSB-Project\\front\\src\\pages\\Home.js":"6","C:\\Users\\FRANQ\\Desktop\\CEN3031\\CEN-VCSB-Project\\front\\src\\pages\\Sponsorships.js":"7","C:\\Users\\FRANQ\\Desktop\\CEN3031\\CEN-VCSB-Project\\front\\src\\pages\\Projects.js":"8","C:\\Users\\FRANQ\\Desktop\\CEN3031\\CEN-VCSB-Project\\front\\src\\api\\index.js":"9","C:\\Users\\FRANQ\\Desktop\\CEN3031\\CEN-VCSB-Project\\front\\src\\constants\\actionTypes.js":"10","C:\\Users\\FRANQ\\Desktop\\CEN3031\\CEN-VCSB-Project\\front\\src\\components\\InputBox.js":"11","C:\\Users\\FRANQ\\Desktop\\CEN4721\\CEN4721Project\\frontend\\src\\index.js":"12","C:\\Users\\FRANQ\\Desktop\\CEN4721\\CEN4721Project\\frontend\\src\\App.js":"13","C:\\Users\\FRANQ\\Desktop\\CEN4721\\CEN4721Project\\frontend\\src\\reducers\\index.js":"14","C:\\Users\\FRANQ\\Desktop\\CEN4721\\CEN4721Project\\frontend\\src\\components\\CalendarView\\CalendarView.js":"15","C:\\Users\\FRANQ\\Desktop\\CEN4721\\CEN4721Project\\frontend\\src\\actions\\events.js":"16","C:\\Users\\FRANQ\\Desktop\\CEN4721\\CEN4721Project\\frontend\\src\\components\\Header\\Header.js":"17","C:\\Users\\FRANQ\\Desktop\\CEN4721\\CEN4721Project\\frontend\\src\\api\\index.js":"18","C:\\Users\\FRANQ\\Desktop\\CEN4721\\CEN4721Project\\frontend\\src\\components\\CalendarView\\styles.js":"19","C:\\Users\\FRANQ\\Desktop\\CEN4721\\CEN4721Project\\frontend\\src\\reducers\\events.js":"20","C:\\Users\\FRANQ\\Desktop\\CEN4721\\CEN4721Project\\frontend\\src\\components\\CalendarView\\SubmitForm\\SubmitForm.js":"21","C:\\Users\\FRANQ\\Desktop\\CEN4721\\CEN4721Project\\frontend\\src\\components\\CalendarView\\Events\\Events.js":"22","C:\\Users\\FRANQ\\Desktop\\CEN4721\\CEN4721Project\\frontend\\src\\constants\\actionTypes.js":"23","C:\\Users\\FRANQ\\Desktop\\CEN4721\\CEN4721Project\\frontend\\src\\components\\Header\\styles.js":"24","C:\\Users\\FRANQ\\Desktop\\CEN4721\\CEN4721Project\\frontend\\src\\components\\CalendarView\\Events\\Event\\Event.js":"25","C:\\Users\\FRANQ\\Desktop\\CEN4721\\CEN4721Project\\frontend\\src\\components\\CalendarView\\SubmitForm\\styles.js":"26","C:\\Users\\FRANQ\\Desktop\\CEN4721\\CEN4721Project\\frontend\\src\\components\\CalendarView\\SubmitForm\\DateSelector\\DateSelector.js":"27","C:\\Users\\FRANQ\\Desktop\\CEN4721\\CEN4721Project\\frontend\\src\\components\\CalendarView\\SubmitForm\\TimeMenu\\TimeMenu.js":"28","C:\\Users\\FRANQ\\Desktop\\CEN4721\\CEN4721Project\\frontend\\src\\components\\CalendarView\\SubmitForm\\TimeMenu\\styles.js":"29","C:\\Users\\FRANQ\\Desktop\\CEN4721\\CEN4721Project\\frontend\\src\\components\\CalendarView\\Events\\Event\\styles.js":"30","C:\\Users\\FRANQ\\Desktop\\CEN4721\\CEN4721Project\\frontend\\src\\components\\VoiceRecorder\\VoiceRecorder.js":"31","C:\\Users\\FRANQ\\Desktop\\CEN4721\\CEN4721Project\\frontend\\src\\components\\VoiceRecorder\\BacklogItem.js":"32","C:\\Users\\FRANQ\\Desktop\\CEN4721\\CEN4721Project\\frontend\\src\\components\\VoiceRecorder\\styles.js":"33"},{"size":863,"mtime":1616160288254,"results":"34","hashOfConfig":"35"},{"size":1363,"mtime":1616160435722,"results":"36","hashOfConfig":"35"},{"size":682,"mtime":1616149486150,"results":"37","hashOfConfig":"35"},{"size":165,"mtime":1616160116627,"results":"38","hashOfConfig":"35"},{"size":806,"mtime":1616160144610,"results":"39","hashOfConfig":"35"},{"size":232,"mtime":1616160148894,"results":"40","hashOfConfig":"35"},{"size":183,"mtime":1616160137883,"results":"41","hashOfConfig":"35"},{"size":171,"mtime":1616160128410,"results":"42","hashOfConfig":"35"},{"size":623,"mtime":1616148977475,"results":"43","hashOfConfig":"35"},{"size":70,"mtime":1616148305490,"results":"44","hashOfConfig":"35"},{"size":2065,"mtime":1616159792218,"results":"45","hashOfConfig":"35"},{"size":888,"mtime":1616525256943,"results":"46","hashOfConfig":"47"},{"size":674,"mtime":1616526592361,"results":"48","hashOfConfig":"47"},{"size":702,"mtime":1616525256946,"results":"49","hashOfConfig":"47"},{"size":3615,"mtime":1616527435789,"results":"50","hashOfConfig":"47"},{"size":1166,"mtime":1616525256935,"results":"51","hashOfConfig":"47"},{"size":1663,"mtime":1616527645737,"results":"52","hashOfConfig":"47"},{"size":840,"mtime":1616525256936,"results":"53","hashOfConfig":"47"},{"size":468,"mtime":1616527414548,"results":"54","hashOfConfig":"47"},{"size":615,"mtime":1616525256945,"results":"55","hashOfConfig":"47"},{"size":6933,"mtime":1616525278383,"results":"56","hashOfConfig":"47"},{"size":1242,"mtime":1616525278379,"results":"57","hashOfConfig":"47"},{"size":188,"mtime":1616525256942,"results":"58","hashOfConfig":"47"},{"size":618,"mtime":1616525278391,"results":"59","hashOfConfig":"47"},{"size":1503,"mtime":1616526794239,"results":"60","hashOfConfig":"47"},{"size":483,"mtime":1616525278387,"results":"61","hashOfConfig":"47"},{"size":5196,"mtime":1616525278382,"results":"62","hashOfConfig":"47"},{"size":2548,"mtime":1616525278385,"results":"63","hashOfConfig":"47"},{"size":242,"mtime":1616525278386,"results":"64","hashOfConfig":"47"},{"size":1191,"mtime":1616525278378,"results":"65","hashOfConfig":"47"},{"size":2100,"mtime":1616527680460,"results":"66","hashOfConfig":"47"},{"size":411,"mtime":1616527606119,"results":"67","hashOfConfig":"47"},{"size":144,"mtime":1616527535214,"results":"68","hashOfConfig":"47"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15egm9s",{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"14qb5l4",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"94"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"94"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"94"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"94"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\FRANQ\\Desktop\\CEN3031\\CEN-VCSB-Project\\front\\src\\index.js",[],"C:\\Users\\FRANQ\\Desktop\\CEN3031\\CEN-VCSB-Project\\front\\src\\App.js",["145","146","147"],"import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport {  } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\n\nimport { getPosts } from './actions/posts';\n\n//Styling\nimport './App.css'\n\n//import Components\nimport PageNavigation from './pages/PageNavigation';\nimport Home from './pages/Home';\nimport People from './pages/People';\nimport Projects from './pages/Projects';\nimport Sponsorships from './pages/Sponsorships';\n\n\n//import logo from 'pages/MIL_logo_sml.jpg'\n\n//console.log(logo); \n\nconst App = () => {\n\n    //https://reactjs.org/docs/hooks-reference.html#usestateuse\n    const [currentId, setCurrentId] = useState(0);\n\n    //https://react-redux.js.org/api/hooks\n    const dispatch = useDispatch();\n\n\n    //https://reactjs.org/docs/hooks-reference.html#useeffect\n    useEffect(() => {\n        dispatch(getPosts());\n    }, [dispatch]);\n\n\n\n    return (\n        <div classname=\"App\">\n            <Router>\n                <PageNavigation />\n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/people\" component={People} />\n                <Route path=\"/projects\" component={Projects} />\n                <Route path=\"/sponsorships\" component={Sponsorships} />\n            </Router>\n        </div>\n    );\n};\n\nexport default App;\n","C:\\Users\\FRANQ\\Desktop\\CEN3031\\CEN-VCSB-Project\\front\\src\\reducers\\index.js",[],"C:\\Users\\FRANQ\\Desktop\\CEN3031\\CEN-VCSB-Project\\front\\src\\pages\\People.js",[],"C:\\Users\\FRANQ\\Desktop\\CEN3031\\CEN-VCSB-Project\\front\\src\\pages\\PageNavigation.js",[],"C:\\Users\\FRANQ\\Desktop\\CEN3031\\CEN-VCSB-Project\\front\\src\\pages\\Home.js",[],"C:\\Users\\FRANQ\\Desktop\\CEN3031\\CEN-VCSB-Project\\front\\src\\pages\\Sponsorships.js",[],"C:\\Users\\FRANQ\\Desktop\\CEN3031\\CEN-VCSB-Project\\front\\src\\pages\\Projects.js",[],"C:\\Users\\FRANQ\\Desktop\\CEN3031\\CEN-VCSB-Project\\front\\src\\api\\index.js",[],"C:\\Users\\FRANQ\\Desktop\\CEN3031\\CEN-VCSB-Project\\front\\src\\constants\\actionTypes.js",[],"C:\\Users\\FRANQ\\Desktop\\CEN3031\\CEN-VCSB-Project\\front\\src\\components\\InputBox.js",[],"C:\\Users\\FRANQ\\Desktop\\CEN4721\\CEN4721Project\\frontend\\src\\index.js",[],["148","149"],"C:\\Users\\FRANQ\\Desktop\\CEN4721\\CEN4721Project\\frontend\\src\\App.js",[],"C:\\Users\\FRANQ\\Desktop\\CEN4721\\CEN4721Project\\frontend\\src\\reducers\\index.js",[],"C:\\Users\\FRANQ\\Desktop\\CEN4721\\CEN4721Project\\frontend\\src\\components\\CalendarView\\CalendarView.js",["150","151"],"//importing from main npm's\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Button, Grid, Dialog, DialogTitle, Paper, Typography } from '@material-ui/core';\r\nimport { AddCircle } from '@material-ui/icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport BacklogItem from '../VoiceRecorder/BacklogItem'\r\n\r\n//importing specific npm's and components\r\nimport Calendar from 'react-calendar';\r\nimport SubmitForm from './SubmitForm/SubmitForm';\r\nimport Events from './Events/Events';\r\n\r\n//importing requests\r\nimport { getEvents } from '../../actions/events';\r\n\r\n//importing styling\r\nimport useStyles from './styles';\r\nimport './Calendar.css'\r\n\r\nconst CalendarView = () => {\r\n    const [currentId, setCurrentId] = useState(0);\r\n    const [date, setDate] = useState(new Date());\r\n    const [openSubmit, setOpenSubmit] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        dispatch(getEvents());\r\n        console.log(\"tet\");\r\n    }, [currentId, dispatch]);\r\n\r\n    const backlogs = useSelector((state) => {\r\n        let backlogs = [];\r\n        state.events.map((backlog) => { if (backlog.title === \"BACKLOG\") { backlogs.push(backlog) } });\r\n        return backlogs;\r\n    });\r\n\r\n    const handleClose = () =>{\r\n        setOpenSubmit(false);  \r\n        setCurrentId(0);\r\n    }\r\n\r\n    const handleClickOpen = () => {\r\n        setOpenSubmit(true);\r\n    }\r\n\r\n    function numberToMonth(number) {\r\n        switch (number) {\r\n            case 0:\r\n                return \"Janurary\";\r\n            case 1:\r\n                return \"February\";\r\n            case 2:\r\n                return 'March';\r\n            case 3:\r\n                return 'April';\r\n            case 4:\r\n                return 'May';\r\n            case 5:\r\n                return 'June';\r\n            case 6:\r\n                return 'July';\r\n            case 7:\r\n                return 'August';\r\n            case 8:\r\n                return 'September';\r\n            case 9:\r\n                return 'October';\r\n            case 10:\r\n                return 'November';\r\n            case 11:\r\n                return 'Decemeber';\r\n            default:\r\n                return \"?\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={6} alignItems=\"center\">\r\n                    <Calendar onChange={setDate} value={date} />\r\n                    <Button className={ classes.addEventButton } variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n                        <AddCircle />add event\r\n                            </Button>\r\n                    <Dialog onClose={handleClose} open={openSubmit}>\r\n                        <DialogTitle className={classes.dialogtitle} id=\"simple-dialog-title\">{currentId ? \"Updating An Event\" : 'Add Event'}</DialogTitle>\r\n                        <SubmitForm numberToMonth={numberToMonth} currentId={currentId} setCurrentId={setCurrentId} handleClose={handleClose} date={date} />\r\n                    </Dialog>\r\n                    <Events numberToMonth={numberToMonth} setCurrentId={setCurrentId} currentId={currentId} date={date} setOpenSubmit={setOpenSubmit} />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Typography className={ classes.ty } > Backlog</Typography>\r\n                    {backlogs.map((backlog) => (\r\n                        <BacklogItem event={backlog} />\r\n                    ))}\r\n                </Grid>\r\n            </Grid>\r\n            \r\n        </>\r\n    );\r\n};\r\n\r\nexport default CalendarView;\r\n","C:\\Users\\FRANQ\\Desktop\\CEN4721\\CEN4721Project\\frontend\\src\\actions\\events.js",[],"C:\\Users\\FRANQ\\Desktop\\CEN4721\\CEN4721Project\\frontend\\src\\components\\Header\\Header.js",["152","153"],"import React, { useState, useEffect } from 'react';\r\nimport VoiceRecorder from '../VoiceRecorder/VoiceRecorder.js'\r\nimport { Paper, Grid, Button, TextField } from '@material-ui/core';\r\nimport { SearchOutlined, Mic, HelpOutline, Settings } from '@material-ui/icons';\r\nimport useStyles from './styles';\r\n\r\nconst Header = () => {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    return (\r\n        <div>\r\n            <Paper className={classes.paper}>\r\n                <Grid container justify=\"flex-end\" spacing=\"0\" className={classes.grid}>\r\n                    <Grid item xs={5}>\r\n                        <Button className={classes.buttons}><SearchOutlined className={classes.icons} />\r\n                        </Button>\r\n                        <TextField color=\"primary\" InputProps={{ className: classes.textfield }} InputLabelProps={{ className: classes.textfield }} label=\"Search\" variant=\"outlined\" >\r\n                        </TextField>\r\n                    </Grid>\r\n                    <Button className={classes.buttons} onClick={handleClickOpen}> <Mic className={classes.icons} /> </Button>\r\n                    <Button className={classes.buttons} > <HelpOutline className={classes.icons} /> </Button>\r\n                    <Button className={classes.buttons} > <Settings className={classes.icons} /> </Button>\r\n                </Grid>\r\n            </Paper>\r\n            <VoiceRecorder open={open} onClose={handleClose} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","C:\\Users\\FRANQ\\Desktop\\CEN4721\\CEN4721Project\\frontend\\src\\api\\index.js",[],"C:\\Users\\FRANQ\\Desktop\\CEN4721\\CEN4721Project\\frontend\\src\\components\\CalendarView\\styles.js",[],"C:\\Users\\FRANQ\\Desktop\\CEN4721\\CEN4721Project\\frontend\\src\\reducers\\events.js",["154"],"import { CREATE_EVENT, UPDATE_EVENT, DELETE_EVENT, FETCH_DATE_EVENTS } from '../constants/actionTypes';\r\n\r\nexport default (events = [], action) => {\r\n    switch (action.type) {\r\n        case FETCH_DATE_EVENTS:\r\n            return action.payload;\r\n        case CREATE_EVENT:\r\n            return [...events, action.payload];\r\n        case UPDATE_EVENT:\r\n            return events.map((event) => (event._id === action.payload._id ? action.payload : event));\r\n        case DELETE_EVENT:\r\n            return events.filter((event) => event._id !== action.payload);\r\n        default:\r\n            return events;\r\n    }\r\n};","C:\\Users\\FRANQ\\Desktop\\CEN4721\\CEN4721Project\\frontend\\src\\components\\CalendarView\\SubmitForm\\SubmitForm.js",["155","156"],"import { useState, useEffect } from 'react';\r\nimport { Paper, TextField, Grid, Button } from '@material-ui/core';\r\nimport { useDispatch,useSelector } from 'react-redux';\r\n\r\nimport useStyles from './styles';\r\nimport TimeMenu from './TimeMenu/TimeMenu';\r\nimport DateSelector from './DateSelector/DateSelector'\r\n\r\nimport { createEvent, updateEvent } from '../../../actions/events';\r\n\r\nconst SubmitForm = ({ currentId, setCurrentId, date, handleClose, numberToMonth }) => {\r\n    const [eventData, setEventData] = useState({ title: '', date: toStringDate(), description: '', startTime: '8:00am',endTime: '9:00am' });\r\n    const event = useSelector((state) => (currentId ? state.events.find((e) => e._id === currentId) : null));\r\n    const [titleError, setTitleError] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n\r\n    function toStringDate() {\r\n        const stringDate = numberToMonth(date.getMonth()) + date.getDate().toString() + date.getFullYear().toString();\r\n        return stringDate;\r\n    }\r\n\r\n    useEffect(() => {\r\n        const newDate = numberToMonth(date.getMonth()) + date.getDate().toString() + date.getFullYear().toString();\r\n        setEventData({ ...eventData, date: newDate });\r\n    }, [date]);\r\n\r\n    useEffect(() => {\r\n        if (event) {\r\n            setEventData(event);\r\n        }\r\n    }, [event]);\r\n\r\n\r\n    const clear = () => {\r\n        setTitleError(false);\r\n        setCurrentId(0);\r\n        setEventData({\r\n            title: '',\r\n            date: eventData.date,\r\n            description: '',\r\n            startTime: eventData.startTime,\r\n            endTime: eventData.endTime });\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n        console.log(\"done\");\r\n        if (document.getElementById(\"SubmitFormTitle\").value === '') {\r\n            setTitleError(true);\r\n            alert(\"Please Add a Title\");\r\n        }\r\n        else if (timeToNumber(eventData.startTime) > timeToNumber(eventData.endTime)) {\r\n            setTitleError(false);\r\n            alert(\"End Time should come after Start Time\");\r\n        }\r\n        else {\r\n            if (currentId === 0) {\r\n                console.log(eventData);\r\n                await dispatch(createEvent(eventData));\r\n                clear();\r\n            }\r\n            else {\r\n                dispatch(updateEvent(currentId, eventData));\r\n                handleClose();\r\n                clear();\r\n            }\r\n        }\r\n    };\r\n\r\n    const timeToNumber = (e) => {\r\n        switch (e) {\r\n            case '12:00am': return 1; case '12:15am': return 2; case '12:30am': return 3; case '12:45am': return 4; case '1:00am': return 5; case '1:15am': return 6; case '1:30am': return 7; case '1:45am': return 8;\r\n            case '2:00am': return 9; case '2:15am': return 10; case '2:30am': return 11; case '2:45am': return 12; case '3:00am': return 13; case '3:15am': return 14; case '3:30am': return 15; case '3:45am': return 16;\r\n            case '4:00am': return 17; case '4:15am': return 18; case '4:30am': return 19; case '4:45am': return 20; case '5:00am': return 21; case '5:15am': return 22; case '5:30am': return 23; case '5:45am': return 24;\r\n            case '6:00am': return 25; case '6:15am': return 26; case '6:30am': return 27; case '6:45am': return 28; case '7:00am': return 29; case '7:15am': return 30; case '7:30am': return 31; case '7:45am': return 32;\r\n            case '8:00am': return 33; case '8:15am': return 34; case '8:30am': return 35; case '8:45am': return 36; case '9:00am': return 37; case '9:15am': return 38; case '9:30am': return 39; case '9:45am': return 40;\r\n            case '10:00am': return 41; case '10:15am': return 42; case '10:30am': return 43; case '10:45am': return 44; case '11:00am': return 45; case '11:15am': return 46; case '11:30am': return 47; case '11:45am': return 48;\r\n            case '12:00pm': return 49; case '12:15pm': return 50; case '12:30pm': return 51; case '12:45pm': return 52; case '1:00pm': return 53; case '1:15pm': return 54; case '1:30pm': return 55; case '1:45pm': return 56;\r\n            case '2:00pm': return 57; case '2:15pm': return 58; case '2:30pm': return 59; case '2:45pm': return 60; case '3:00pm': return 61; case '3:15pm': return 62; case '3:30pm': return 63; case '3:45pm': return 64;\r\n            case '4:00pm': return 65; case '4:15pm': return 66; case '4:30pm': return 67; case '4:45pm': return 68; case '5:00pm': return 69; case '5:15pm': return 70; case '5:30pm': return 71; case '5:45pm': return 72;\r\n            case '6:00pm': return 73; case '6:15pm': return 74; case '6:30pm': return 75; case '6:45pm': return 76; case '7:00pm': return 77; case '7:15pm': return 78; case '7:30pm': return 79; case '7:45pm': return 80;\r\n            case '8:00pm': return 81; case '8:15pm': return 82; case '8:30pm': return 83; case '8:45pm': return 84; case '9:00pm': return 85; case '9:15pm': return 86; case '9:30pm': return 87; case '9:45pm': return 88;\r\n            case '10:00pm': return 89; case '10:15pm': return 90; case '10:30pm': return 91; case '10:45pm': return 92; case '11:00pm': return 93; case '11:15pm': return 94; case '11:30pm': return 95; case '11:45pm': return 96; default: return 0;\r\n        }\r\n\r\n    }\r\n\r\n    const callbackFunction = (time) => {\r\n        setEventData({ ...eventData, startTime: time });\r\n    }\r\n    const callbackFunction2 = (time) => {\r\n        setEventData({ ...eventData, endTime: time });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" className={ classes.grid }>\r\n                <Grid item><TextField className={classes.title} error={titleError} id=\"SubmitFormTitle\" variant=\"outlined\" label=\"Title *\" value={ eventData.title } onChange={(e) => setEventData({ ...eventData, title: e.target.value })}/></Grid>\r\n                <Grid item><DateSelector className={classes.title} id=\"DateSelector\" date={date} eventData={eventData} setEventData={setEventData} numberToMonth={ numberToMonth } /></Grid>\r\n                <Grid item ><TextField className={classes.description} id=\"SubmitFormDescription\" multiline rows={4} variant=\"outlined\" label=\"Description\" value={eventData.description} onChange={(e) => setEventData({ ...eventData, description: e.target.value })}/></Grid>\r\n                <Grid item><TimeMenu className={classes.time} name={eventData.startTime} callBack={callbackFunction} />{\" - \"} <TimeMenu name={ eventData.endTime } callBack={callbackFunction2}/></Grid>\r\n                <Grid item>\r\n                    <Button variant=\"contained\" color=\"secondary\" size=\"small\" className={classes.button} children=\"Cancel\" onClick={handleClose} />\r\n                    <Button variant=\"contained\" color=\"primary\" size=\"small\" className={classes.button} children=\"Sumbit\" onClick={handleSubmit} />\r\n                </Grid>\r\n            </Grid>\r\n            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default SubmitForm;","C:\\Users\\FRANQ\\Desktop\\CEN4721\\CEN4721Project\\frontend\\src\\components\\CalendarView\\Events\\Events.js",["157","158","159","160","161"],"import React from 'react';\r\nimport { Grid, CircularProgress,Button, Typography } from '@material-ui/core';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Event from './Event/Event';\r\n\r\nconst Events = ({ setCurrentId, date, curretId, setOpenSubmit, numberToMonth }) => {\r\n    const events = useSelector((state) => {\r\n        let events = [];\r\n        const dateChecker = numberToMonth(date.getMonth()) + date.getDate() + date.getFullYear();\r\n        state.events.map((event) => { if (event.date === dateChecker) { events.push(event) } });\r\n        return events;\r\n    });\r\n    \r\n    const columns = [\r\n        { field: 'Title', headerName: 'Title', width: 70 },\r\n        { field: 'Description', headerName: 'Description', width: 130 },\r\n        { field: 'StartTime', headerName: 'EndTime', width: 130 },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            {!events.length ? <Typography>No Events For This Day</Typography> : (\r\n                <>\r\n                    {events.map((event) => (\r\n                            <Event event={event} curretId={curretId} setCurrentId={setCurrentId} setOpenSubmit={setOpenSubmit }/>  \r\n                    ))}\r\n                </>\r\n            )}\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Events;","C:\\Users\\FRANQ\\Desktop\\CEN4721\\CEN4721Project\\frontend\\src\\constants\\actionTypes.js",[],"C:\\Users\\FRANQ\\Desktop\\CEN4721\\CEN4721Project\\frontend\\src\\components\\Header\\styles.js",[],"C:\\Users\\FRANQ\\Desktop\\CEN4721\\CEN4721Project\\frontend\\src\\components\\CalendarView\\Events\\Event\\Event.js",["162","163"],"import React from 'react';\r\nimport { Card, Typography,Button,Grid } from '@material-ui/core/';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteEvent } from '../../../../actions/events'\r\nimport { FormatBold } from '@material-ui/icons';\r\nimport { Delete, UpdateRounded } from '@material-ui/icons';\r\nimport useStyles from './styles.js';\r\n\r\n\r\nconst Event = ({ event, setCurrentId, currentId, setOpenSubmit }) => {\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n\r\n    return (\r\n            <Card className={ classes.card }>\r\n                <Typography className={classes.title} variant=\"h6\"><b>{event.title}</b></Typography>\r\n                <Typography className={classes.time} variant=\"h6\">{event.startTime}{\" - \"}{event.endTime}</Typography>\r\n                {(event.description === \"\") ? (<></>) : (<Typography className={classes.description2} > {\"Description: \"} {event.description}</Typography>)}\r\n                <Button variant=\"contained\" className={classes.selectButton} color=\"primary\" size=\"small\" startIcon={<UpdateRounded />} onClick={() => { setCurrentId(event._id); setOpenSubmit(true); }}>Select</Button>\r\n                <Button variant=\"contained\" color=\"secondary\" className={classes.deleteButton} size=\"small\" startIcon={<Delete />} onClick={() => { if (currentId === event._id) { alert(\"Please Finish Updating before Deleting\") } else { dispatch(deleteEvent(event._id)) } }}>Delete</Button>\r\n            </Card>\r\n    );\r\n};\r\n\r\nexport default Event;","C:\\Users\\FRANQ\\Desktop\\CEN4721\\CEN4721Project\\frontend\\src\\components\\CalendarView\\SubmitForm\\styles.js",[],"C:\\Users\\FRANQ\\Desktop\\CEN4721\\CEN4721Project\\frontend\\src\\components\\CalendarView\\SubmitForm\\DateSelector\\DateSelector.js",["164"],"import { useState, useEffect } from 'react';\r\nimport { Menu, Button, MenuItem } from '@material-ui/core';\r\n\r\nconst monthes = [\r\n    'Janurary',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'Decemeber'\r\n];\r\n\r\nconst dates = [\r\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\r\n    11, 12, 13, 14, 15, 16, 17, 18, 19,\r\n    20, 21, 22, 23, 24, 25, 26, 27, 28, 29,\r\n    30, 31\r\n];\r\n\r\nconst dates2 = [\r\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\r\n    11, 12, 13, 14, 15, 16, 17, 18, 19,\r\n    20, 21, 22, 23, 24, 25, 26, 27, 28, 29,\r\n    30\r\n];\r\n\r\nconst dates3 = [\r\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\r\n    11, 12, 13, 14, 15, 16, 17, 18, 19,\r\n    20, 21, 22, 23, 24, 25, 26, 27, 28\r\n];\r\n\r\nconst years = [\r\n    \"2020\",\r\n    \"2021\",\r\n    \"2022\",\r\n    \"2023\"\r\n];\r\n\r\nconst DateSelector = ({ date, setEventData, eventData, numberToMonth  }) =>{\r\n    const [monthAnchor, setMonthAnchor] = useState(null);\r\n    const [dateAnchor, setDayAnchor] = useState(null);\r\n    const [yearAnchor, setYearAnchor] = useState(null);\r\n    const [m, setMonth] = useState(numberToMonth(date.getMonth()));\r\n    const [d, setDay] = useState(date.getDate().toString());\r\n    const [y, setYear] = useState(date.getFullYear().toString());\r\n    const [daysToUse, setDaysToUse] = useState(dates);\r\n\r\n    useEffect(() => {\r\n        setMonth(numberToMonth(date.getMonth()));\r\n        setDay(date.getDate().toString());\r\n        setYear(date.getFullYear().toString());\r\n        monthChangeDays();\r\n    }, [date]);\r\n\r\n    function setDate(month, day, year) {\r\n        const newDate = month.toString() + day.toString() + year.toString();\r\n        setEventData({ ...eventData, date: newDate });\r\n    }\r\n\r\n    //////////\r\n    const handleDClick = (event) => { setDayAnchor(event.currentTarget); };\r\n    const handleMClick = (event) => { setMonthAnchor(event.currentTarget); };\r\n    const handleYClick = (event) => { setYearAnchor(event.currentTarget); };\r\n    \r\n    const handleDClose = () => { setDayAnchor(null); };\r\n    const handleMClose = () => { setMonthAnchor(null); };\r\n    const handleYClose = () => { setYearAnchor(null); };\r\n    ////////////////\r\n\r\n    const handleDayClick = (event) => {\r\n        setDay(event.target.textContent);\r\n        handleDClose();\r\n        setDate(m, event.target.textContent, y);\r\n    };\r\n    const handleMonthClick = (event) => {\r\n        setMonth(event.target.textContent);\r\n        handleMClose();\r\n        setDate(event.target.textContent, d, y);\r\n        monthChangeDays();\r\n        \r\n    };\r\n    const handleYearClick = (event) => {\r\n        setYear(event.target.textContent);\r\n        handleYClose();\r\n        setDate(m, d, event.target.textContent);\r\n    };\r\n\r\n    const monthChangeDays = () =>{\r\n        if (m === \"Janurary\" || m === \"March\" || m === \"May\" || m === \"July\" || m === \"August\" || m === \"October\" || m === \"December\") {\r\n            setDaysToUse(dates);\r\n        }\r\n        else if (m === \"February\") {\r\n             if (d === \"29\" || d === \"30\" || d === \"31\") {\r\n                 setDay(\"28\");\r\n             }\r\n\r\n            setDaysToUse(dates3);\r\n        }\r\n        else { if (d === \"31\") { setDay(\"30\"); } setDaysToUse(dates2); }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button children={m} aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleMClick} />\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={monthAnchor}\r\n                keepMounted\r\n                open={Boolean(monthAnchor)}\r\n                onClose={handleMClose}\r\n                PaperProps={{ style: { maxHeight: 200 } }}\r\n            >\r\n                {monthes.map((month) => (\r\n                    <MenuItem selected={ month.toString() === m } key={month.toString()} children={month} onClick={handleMonthClick} />\r\n                ))}\r\n\r\n            </Menu>\r\n            <Button children={d.toString()} aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleDClick} />\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={dateAnchor}\r\n                keepMounted\r\n                open={Boolean(dateAnchor)}\r\n                onClose={handleDClose}\r\n                PaperProps={{ style: { maxHeight: 200 } }}\r\n            >\r\n                {\r\n                    daysToUse.map((date) => (\r\n                        <MenuItem selected={date.toString() === d} key={date.toString()} children={date} onClick={handleDayClick} />\r\n                    ))}\r\n\r\n            </Menu>\r\n            <Button children={y} aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleYClick} />\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={yearAnchor}\r\n                keepMounted\r\n                open={Boolean(yearAnchor)}\r\n                onClose={handleYClose}\r\n                PaperProps={{ style: { maxHeight: 200 } }}\r\n            >\r\n                {years.map((year) => (\r\n                    <MenuItem selected={ year.toString() === y } key={ year.toString() } children={year} onClick={handleYearClick} />\r\n                ))}\r\n\r\n            </Menu>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DateSelector;","C:\\Users\\FRANQ\\Desktop\\CEN4721\\CEN4721Project\\frontend\\src\\components\\CalendarView\\SubmitForm\\TimeMenu\\TimeMenu.js",[],"C:\\Users\\FRANQ\\Desktop\\CEN4721\\CEN4721Project\\frontend\\src\\components\\CalendarView\\SubmitForm\\TimeMenu\\styles.js",[],"C:\\Users\\FRANQ\\Desktop\\CEN4721\\CEN4721Project\\frontend\\src\\components\\CalendarView\\Events\\Event\\styles.js",[],"C:\\Users\\FRANQ\\Desktop\\CEN4721\\CEN4721Project\\frontend\\src\\components\\VoiceRecorder\\VoiceRecorder.js",["165","166","167","168"],"import React, { useState, useEffect } from 'react';\r\nimport KeyboardVoiceIcon from '@material-ui/icons/KeyboardVoice';\r\nimport StopIcon from '@material-ui/icons/Stop';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { Grid, Button } from '@material-ui/core';\r\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createEvent, updateEvent } from '../../actions/events';\r\n\r\n\r\n\r\nconst VoiceRecorder = (props) => {\r\n    const { onClose, open } = props;\r\n    const { transcript, resetTranscript } = useSpeechRecognition()\r\n    const dispatch = useDispatch();\r\n    const [eventData, setEventData] = useState({ title: 'BACKLOG', date: '', description: '', startTime: '', endTime: '' });\r\n    if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\r\n        return null\r\n    }\r\n\r\n    const handleClose = () => {\r\n        SpeechRecognition.stopListening();\r\n        onClose();\r\n    };\r\n\r\n    const onSubmit = async () => {\r\n        console.log(eventData);\r\n        onClose();\r\n        dispatch(createEvent(eventData));\r\n    };\r\n    const onStop = () => {\r\n        setEventData({ ...eventData, description: transcript });\r\n    }\r\n    return (\r\n        <Dialog onClose={handleClose} aria-labelledby=\"voice-record-popup\" open={open}>\r\n            <DialogTitle id=\"voice-record-popup\">Start a voice recording</DialogTitle>\r\n            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" >\r\n                <Fab onClick={SpeechRecognition.startListening} color=\"primary\" aria-label=\"voice-record\">\r\n                    <KeyboardVoiceIcon />\r\n                </Fab>\r\n                <Fab onClick={onStop} color=\"secondary\" aria-label=\"record-stop\">\r\n                    <StopIcon />\r\n                </Fab>\r\n            </Grid>\r\n            <p>{transcript}</p>\r\n            <Button onClick={onSubmit}> Add backlog item</Button>\r\n        </Dialog>);\r\n\r\n};\r\n\r\nexport default VoiceRecorder;","C:\\Users\\FRANQ\\Desktop\\CEN4721\\CEN4721Project\\frontend\\src\\components\\VoiceRecorder\\BacklogItem.js",[],"C:\\Users\\FRANQ\\Desktop\\CEN4721\\CEN4721Project\\frontend\\src\\components\\VoiceRecorder\\styles.js",[],{"ruleId":"169","severity":1,"message":"170","line":2,"column":35,"nodeType":"171","messageId":"172","endLine":2,"endColumn":41},{"ruleId":"169","severity":1,"message":"173","line":26,"column":12,"nodeType":"171","messageId":"172","endLine":26,"endColumn":21},{"ruleId":"169","severity":1,"message":"174","line":26,"column":23,"nodeType":"171","messageId":"172","endLine":26,"endColumn":35},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"169","severity":1,"message":"179","line":3,"column":45,"nodeType":"171","messageId":"172","endLine":3,"endColumn":50},{"ruleId":"180","severity":1,"message":"181","line":35,"column":36,"nodeType":"182","messageId":"183","endLine":35,"endColumn":38},{"ruleId":"169","severity":1,"message":"184","line":1,"column":17,"nodeType":"171","messageId":"172","endLine":1,"endColumn":25},{"ruleId":"169","severity":1,"message":"185","line":1,"column":27,"nodeType":"171","messageId":"172","endLine":1,"endColumn":36},{"ruleId":"186","severity":1,"message":"187","line":3,"column":1,"nodeType":"188","endLine":16,"endColumn":3},{"ruleId":"169","severity":1,"message":"179","line":2,"column":10,"nodeType":"171","messageId":"172","endLine":2,"endColumn":15},{"ruleId":"189","severity":1,"message":"190","line":27,"column":8,"nodeType":"191","endLine":27,"endColumn":14,"suggestions":"192"},{"ruleId":"169","severity":1,"message":"193","line":2,"column":10,"nodeType":"171","messageId":"172","endLine":2,"endColumn":14},{"ruleId":"169","severity":1,"message":"194","line":2,"column":16,"nodeType":"171","messageId":"172","endLine":2,"endColumn":32},{"ruleId":"169","severity":1,"message":"195","line":2,"column":33,"nodeType":"171","messageId":"172","endLine":2,"endColumn":39},{"ruleId":"180","severity":1,"message":"181","line":11,"column":34,"nodeType":"182","messageId":"183","endLine":11,"endColumn":36},{"ruleId":"169","severity":1,"message":"196","line":15,"column":11,"nodeType":"171","messageId":"172","endLine":15,"endColumn":18},{"ruleId":"169","severity":1,"message":"193","line":2,"column":34,"nodeType":"171","messageId":"172","endLine":2,"endColumn":38},{"ruleId":"169","severity":1,"message":"197","line":5,"column":10,"nodeType":"171","messageId":"172","endLine":5,"endColumn":20},{"ruleId":"189","severity":1,"message":"198","line":60,"column":8,"nodeType":"191","endLine":60,"endColumn":14,"suggestions":"199"},{"ruleId":"169","severity":1,"message":"185","line":1,"column":27,"nodeType":"171","messageId":"172","endLine":1,"endColumn":36},{"ruleId":"169","severity":1,"message":"200","line":9,"column":23,"nodeType":"171","messageId":"172","endLine":9,"endColumn":34},{"ruleId":"169","severity":1,"message":"201","line":10,"column":23,"nodeType":"171","messageId":"172","endLine":10,"endColumn":34},{"ruleId":"169","severity":1,"message":"202","line":16,"column":25,"nodeType":"171","messageId":"172","endLine":16,"endColumn":40},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'currentId' is assigned a value but never used.","'setCurrentId' is assigned a value but never used.","no-native-reassign",["203"],"no-negated-in-lhs",["204"],"'Paper' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useState' is defined but never used.","'useEffect' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'eventData' and 'numberToMonth'. Either include them or remove the dependency array. If 'numberToMonth' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["205"],"'Grid' is defined but never used.","'CircularProgress' is defined but never used.","'Button' is defined but never used.","'columns' is assigned a value but never used.","'FormatBold' is defined but never used.","React Hook useEffect has missing dependencies: 'monthChangeDays' and 'numberToMonth'. Either include them or remove the dependency array. If 'numberToMonth' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["206"],"'useSelector' is defined but never used.","'updateEvent' is defined but never used.","'resetTranscript' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},"Update the dependencies array to be: [date, eventData, numberToMonth]",{"range":"211","text":"212"},"Update the dependencies array to be: [date, monthChangeDays, numberToMonth]",{"range":"213","text":"214"},[1248,1254],"[date, eventData, numberToMonth]",[1551,1557],"[date, monthChangeDays, numberToMonth]"]