{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ethan\\\\JSProjects\\\\CEN4721Project\\\\frontend\\\\src\\\\components\\\\VoiceRecorder\\\\VoiceRecorder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport KeyboardVoiceIcon from '@material-ui/icons/KeyboardVoice';\nimport StopIcon from '@material-ui/icons/Stop';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport Fab from '@material-ui/core/Fab';\nimport { Grid, Button } from '@material-ui/core';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VoiceRecorder = props => {\n  _s();\n\n  const {\n    onClose,\n    open\n  } = props;\n  const {\n    transcript,\n    resetTranscript\n  } = useSpeechRecognition();\n\n  if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\n    return null;\n  }\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    onClose: handleClose,\n    \"aria-labelledby\": \"voice-record-popup\",\n    open: open,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"voice-record-popup\",\n      children: \"Start a voice recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Fab, {\n        onClick: SpeechRecognition.startListening,\n        color: \"primary\",\n        \"aria-label\": \"voice-record\",\n        children: /*#__PURE__*/_jsxDEV(KeyboardVoiceIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Fab, {\n        onClick: SpeechRecognition.stopListening,\n        color: \"secondary\",\n        \"aria-label\": \"record-stop\",\n        children: /*#__PURE__*/_jsxDEV(StopIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: transcript\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      children: \" Complete \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(VoiceRecorder, \"jh1/qkmPhH2Ui4CQVO5LElRfLv0=\", false, function () {\n  return [useSpeechRecognition];\n});\n\n_c = VoiceRecorder;\nexport default VoiceRecorder;\n\nvar _c;\n\n$RefreshReg$(_c, \"VoiceRecorder\");","map":{"version":3,"sources":["C:/Users/ethan/JSProjects/CEN4721Project/frontend/src/components/VoiceRecorder/VoiceRecorder.js"],"names":["React","useState","useEffect","KeyboardVoiceIcon","StopIcon","DialogTitle","Dialog","Fab","Grid","Button","SpeechRecognition","useSpeechRecognition","VoiceRecorder","props","onClose","open","transcript","resetTranscript","browserSupportsSpeechRecognition","handleClose","startListening","stopListening"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,mBAA7B;AACA,OAAOC,iBAAP,IAA4BC,oBAA5B,QAAwD,0BAAxD;;;AAGA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBF,KAA1B;AACA,QAAM;AAAEG,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAkCN,oBAAoB,EAA5D;;AAEA,MAAI,CAACD,iBAAiB,CAACQ,gCAAlB,EAAL,EAA2D;AACvD,WAAO,IAAP;AACH;;AAED,QAAMC,WAAW,GAAG,MAAM;AACtBL,IAAAA,OAAO;AACV,GAFD;;AAIA,sBACI,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAEK,WAAjB;AAA8B,uBAAgB,oBAA9C;AAAmE,IAAA,IAAI,EAAEJ,IAAzE;AAAA,4BACI,QAAC,WAAD;AAAa,MAAA,EAAE,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,SAAS,EAAC,KAA1B;AAAgC,MAAA,OAAO,EAAC,QAAxC;AAAiD,MAAA,UAAU,EAAC,QAA5D;AAAA,8BACI,QAAC,GAAD;AAAK,QAAA,OAAO,EAAEL,iBAAiB,CAACU,cAAhC;AAAgD,QAAA,KAAK,EAAC,SAAtD;AAAgE,sBAAW,cAA3E;AAAA,+BACI,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,GAAD;AAAK,QAAA,OAAO,EAAEV,iBAAiB,CAACW,aAAhC;AAA+C,QAAA,KAAK,EAAC,WAArD;AAAiE,sBAAW,aAA5E;AAAA,+BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAUI;AAAA,gBAAIL;AAAJ;AAAA;AAAA;AAAA;AAAA,YAVJ,eAWI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CA3BD;;GAAMJ,a;UAEsCD,oB;;;KAFtCC,a;AA6BN,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport KeyboardVoiceIcon from '@material-ui/icons/KeyboardVoice';\r\nimport StopIcon from '@material-ui/icons/Stop';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { Grid, Button } from '@material-ui/core';\r\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition'\r\n\r\n\r\nconst VoiceRecorder = (props) => {\r\n    const { onClose, open } = props;\r\n    const { transcript, resetTranscript } = useSpeechRecognition()\r\n\r\n    if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\r\n        return null\r\n    }\r\n\r\n    const handleClose = () => {\r\n        onClose();\r\n    };\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} aria-labelledby=\"voice-record-popup\" open={open}>\r\n            <DialogTitle id=\"voice-record-popup\">Start a voice recording</DialogTitle>\r\n            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" >\r\n                <Fab onClick={SpeechRecognition.startListening} color=\"primary\" aria-label=\"voice-record\">\r\n                    <KeyboardVoiceIcon />\r\n                </Fab>\r\n                <Fab onClick={SpeechRecognition.stopListening} color=\"secondary\" aria-label=\"record-stop\">\r\n                    <StopIcon />\r\n                </Fab>\r\n            </Grid>\r\n            <p>{transcript}</p>\r\n            <Button> Complete </Button>\r\n        </Dialog>);\r\n\r\n};\r\n\r\nexport default VoiceRecorder;\r\n"]},"metadata":{},"sourceType":"module"}