{"ast":null,"code":"import { combineReducers } from 'redux'; //As your app grows more complex, you'll want to split your reducing function into separate functions, \n//each managing independent parts of the state.\n//The combineReducers helper function turns an object whose values \n//are different reducing functions into a single reducing function you can pass to createStore.\n//The resulting reducer calls every child reducer, \n//and gathers their results into a single state object.\n//The state produced by combineReducers() namespaces the states of each reducer \n//under their keys as passed to combineReducers()\n\nimport events from './events';\nexport const reducers = combineReducers({\n  posts,\n  events\n});","map":{"version":3,"sources":["C:/Users/FRANQ/Desktop/CEN4721/CEN4721Project/frontend/src/reducers/index.js"],"names":["combineReducers","events","reducers","posts"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC,C,CAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,OAAO,MAAMC,QAAQ,GAAGF,eAAe,CAAC;AAAEG,EAAAA,KAAF;AAAQF,EAAAA;AAAR,CAAD,CAAhC","sourcesContent":["import { combineReducers } from 'redux';\n\n//As your app grows more complex, you'll want to split your reducing function into separate functions, \n//each managing independent parts of the state.\n\n//The combineReducers helper function turns an object whose values \n//are different reducing functions into a single reducing function you can pass to createStore.\n\n//The resulting reducer calls every child reducer, \n//and gathers their results into a single state object.\n//The state produced by combineReducers() namespaces the states of each reducer \n//under their keys as passed to combineReducers()\n \nimport events from './events';\n\nexport const reducers = combineReducers({ posts,events });\n"]},"metadata":{},"sourceType":"module"}