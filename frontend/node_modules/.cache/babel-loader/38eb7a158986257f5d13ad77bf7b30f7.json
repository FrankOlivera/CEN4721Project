{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FRANQ\\\\Desktop\\\\CEN4721\\\\CEN4721Project\\\\frontend\\\\src\\\\components\\\\CalendarView\\\\Events\\\\Events.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Grid, CircularProgress, Button } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport Event from './Event/Event';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Events = ({\n  setCurrentId,\n  date\n}) => {\n  _s();\n\n  const events = useSelector(state => {\n    let events = [];\n    state.events.map(event => {\n      if (event.date === date) {\n        events.push(event);\n      }\n    });\n    console.log(events);\n    return events;\n  });\n\n  const h = () => {\n    console.log(events);\n  };\n\n  return !events.length ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 26\n  }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    alignItems: \"stretch\",\n    spacing: 3,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: h\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this), events.map(event => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 6,\n      children: /*#__PURE__*/_jsxDEV(Event, {\n        event: event,\n        setCurrentId: setCurrentId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }, this)\n    }, event._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Events, \"4vm65GOKDCO77f3f0wI8DV+xDq0=\", false, function () {\n  return [useSelector];\n});\n\n_c = Events;\nexport default Events;\n\nvar _c;\n\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"sources":["C:/Users/FRANQ/Desktop/CEN4721/CEN4721Project/frontend/src/components/CalendarView/Events/Events.js"],"names":["React","Grid","CircularProgress","Button","useSelector","Event","Events","setCurrentId","date","events","state","map","event","push","console","log","h","length","_id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,gBAAf,EAAgCC,MAAhC,QAA8C,mBAA9C;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,KAAP,MAAkB,eAAlB;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAD,KAA4B;AAAA;;AACvC,QAAMC,MAAM,GAAGL,WAAW,CAAEM,KAAD,IAAW;AAClC,QAAID,MAAM,GAAG,EAAb;AACAC,IAAAA,KAAK,CAACD,MAAN,CAAaE,GAAb,CAAkBC,KAAD,IAAW;AAAE,UAAIA,KAAK,CAACJ,IAAN,KAAeA,IAAnB,EAAyB;AAAEC,QAAAA,MAAM,CAACI,IAAP,CAAYD,KAAZ;AAAoB;AAAE,KAA/E;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACA,WAAOA,MAAP;AACK,GALiB,CAA1B;;AAOA,QAAMO,CAAC,GAAG,MAAM;AACZF,IAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACH,GAFD;;AAIA,SACI,CAACA,MAAM,CAACQ,MAAR,gBAAiB,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,UAAjB,gBACI,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,UAAU,EAAC,SAA3B;AAAqC,IAAA,OAAO,EAAE,CAA9C;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAGD;AAAlB;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKP,MAAM,CAACE,GAAP,CAAYC,KAAD,iBACR,QAAC,IAAD;AAAsB,MAAA,IAAI,MAA1B;AAA2B,MAAA,EAAE,EAAE,EAA/B;AAAmC,MAAA,EAAE,EAAE,CAAvC;AAA0C,MAAA,EAAE,EAAE,CAA9C;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,KAAK,EAAEA,KAAd;AAAqB,QAAA,YAAY,EAAEL;AAAnC;AAAA;AAAA;AAAA;AAAA;AADJ,OAAWK,KAAK,CAACM,GAAjB;AAAA;AAAA;AAAA;AAAA,YADH,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UAFR;AAYH,CAxBD;;GAAMZ,M;UACaF,W;;;KADbE,M;AA0BN,eAAeA,MAAf","sourcesContent":["import React from 'react';\r\nimport { Grid, CircularProgress,Button } from '@material-ui/core';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Event from './Event/Event';\r\n\r\nconst Events = ({ setCurrentId, date }) => {\r\n    const events = useSelector((state) => {\r\n        let events = [];\r\n        state.events.map((event) => { if (event.date === date) { events.push(event) } });\r\n        console.log(events);\r\n        return events;\r\n            });\r\n    \r\n    const h = () => {\r\n        console.log(events);\r\n    }\r\n\r\n    return (\r\n        !events.length ? <CircularProgress /> : (\r\n            <Grid container alignItems=\"stretch\" spacing={3}>\r\n                <Button onClick={ h }></Button>\r\n                {events.map((event) => (\r\n                    <Grid key={event._id} item xs={12} sm={6} md={6}>\r\n                        <Event event={event} setCurrentId={setCurrentId} />\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n        )\r\n    );\r\n};\r\n\r\nexport default Events;"]},"metadata":{},"sourceType":"module"}