{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ethan\\\\JSProjects\\\\CEN4721Project\\\\frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n//Styling\n//import Components\nimport CalendarView from './components/CalendarView/CalendarView';\nimport Header from './components/Header/Header';\nimport { React } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const events = useSelector(state => {\n    let events = [];\n    const dateChecker = numberToMonth(date.getMonth()) + date.getDate() + date.getFullYear();\n    state.events.map(event => {\n      if (event.title === dateChecker) {\n        events.push(event);\n      }\n    });\n    console.log(events);\n    return events;\n  });\n  const listout = translations.map(array => {\n    return /*#__PURE__*/_jsxDEV(Transright, {\n      english: array[0],\n      foreign: array[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 18\n    }, this);\n  }); //https://reactjs.org/docs/hooks-reference.html#usestateuse\n  //const [currentId, setCurrentId] = useState(0);\n  //https://react-redux.js.org/api/hooks\n  //const dispatch = useDispatch();\n  //https://reactjs.org/docs/hooks-reference.html#useeffect\n\n  /*useEffect(() => {\r\n      dispatch(getEvents());\r\n  }, [dispatch]);*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CalendarView, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), backlog.map(event => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 6,\n      children: /*#__PURE__*/_jsxDEV(Event, {\n        event: event,\n        setCurrentId: setCurrentId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 29\n      }, this)\n    }, event._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"4vm65GOKDCO77f3f0wI8DV+xDq0=\", true);\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/ethan/JSProjects/CEN4721Project/frontend/src/App.js"],"names":["CalendarView","Header","React","App","events","useSelector","state","dateChecker","numberToMonth","date","getMonth","getDate","getFullYear","map","event","title","push","console","log","listout","translations","array","backlog","setCurrentId","_id"],"mappings":";;;AAAA;AAEA;AACA,OAAOA,YAAP,MAAyB,wCAAzB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAAQC,KAAR,QAAoB,OAApB;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,QAAMC,MAAM,GAAGC,WAAW,CAAEC,KAAD,IAAW;AAClC,QAAIF,MAAM,GAAG,EAAb;AACA,UAAMG,WAAW,GAAGC,aAAa,CAACC,IAAI,CAACC,QAAL,EAAD,CAAb,GAAiCD,IAAI,CAACE,OAAL,EAAjC,GAAkDF,IAAI,CAACG,WAAL,EAAtE;AACAN,IAAAA,KAAK,CAACF,MAAN,CAAaS,GAAb,CAAkBC,KAAD,IAAW;AAAE,UAAIA,KAAK,CAACC,KAAN,KAAgBR,WAApB,EAAiC;AAAEH,QAAAA,MAAM,CAACY,IAAP,CAAYF,KAAZ;AAAoB;AAAE,KAAvF;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYd,MAAZ;AACA,WAAOA,MAAP;AACH,GANyB,CAA1B;AAOA,QAAMe,OAAO,GAAGC,YAAY,CAACP,GAAb,CAAkBQ,KAAD,IAAS;AACpC,wBAAO,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAAC,CAAD,CAA1B;AAA+B,MAAA,OAAO,EAAEA,KAAK,CAAC,CAAD;AAA7C;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFa,CAAhB,CARc,CAWd;AACA;AAEA;AACA;AAGA;;AACA;AACJ;AACA;;AAII,sBACI;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKC,OAAO,CAACT,GAAR,CAAaC,KAAD,iBACD,QAAC,IAAD;AAAsB,MAAA,IAAI,MAA1B;AAA2B,MAAA,EAAE,EAAE,EAA/B;AAAmC,MAAA,EAAE,EAAE,CAAvC;AAA0C,MAAA,EAAE,EAAE,CAA9C;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,KAAK,EAAEA,KAAd;AAAqB,QAAA,YAAY,EAAES;AAAnC;AAAA;AAAA;AAAA;AAAA;AADJ,OAAWT,KAAK,CAACU,GAAjB;AAAA;AAAA;AAAA;AAAA,YADX,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CApCD;;GAAMrB,G;;KAAAA,G;AAsCN,eAAeA,GAAf","sourcesContent":["//Styling\r\n\r\n//import Components\r\nimport CalendarView from './components/CalendarView/CalendarView';\r\nimport Header from './components/Header/Header';\r\nimport {React} from 'react';\r\n\r\n\r\nconst App = () => {\r\n    const events = useSelector((state) => {\r\n        let events = [];\r\n        const dateChecker = numberToMonth(date.getMonth()) + date.getDate() + date.getFullYear();\r\n        state.events.map((event) => { if (event.title === dateChecker) { events.push(event) } });\r\n        console.log(events);\r\n        return events;\r\n    });\r\n    const listout = translations.map((array)=>{\r\n          return <Transright english={array[0]} foreign={array[1]} />\r\n      });\r\n    //https://reactjs.org/docs/hooks-reference.html#usestateuse\r\n    //const [currentId, setCurrentId] = useState(0);\r\n\r\n    //https://react-redux.js.org/api/hooks\r\n    //const dispatch = useDispatch();\r\n\r\n\r\n    //https://reactjs.org/docs/hooks-reference.html#useeffect\r\n    /*useEffect(() => {\r\n        dispatch(getEvents());\r\n    }, [dispatch]);*/\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <CalendarView/>\r\n            {backlog.map((event) => (\r\n                        <Grid key={event._id} item xs={12} sm={6} md={6}>\r\n                            <Event event={event} setCurrentId={setCurrentId} />\r\n                        </Grid>\r\n                    ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}