{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ethan\\\\JSProjects\\\\CEN4721Project\\\\frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n//Styling\n//import Components\nimport CalendarView from './components/CalendarView/CalendarView';\nimport Header from './components/Header/Header';\nimport { React } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  [backlog, addBacklog] = React.useState([]);\n  const listout = translations.map(array => {\n    if (array[2] == \"eng\") {\n      return /*#__PURE__*/_jsxDEV(Transright, {\n        english: array[0],\n        foreign: array[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 18\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Transleft, {\n        english: array[0],\n        foreign: array[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 18\n      }, this);\n    }\n  }); //https://reactjs.org/docs/hooks-reference.html#usestateuse\n  //const [currentId, setCurrentId] = useState(0);\n  //https://react-redux.js.org/api/hooks\n  //const dispatch = useDispatch();\n  //https://reactjs.org/docs/hooks-reference.html#useeffect\n\n  /*useEffect(() => {\r\n      dispatch(getEvents());\r\n  }, [dispatch]);*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CalendarView, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"4bWmwqNpSmwrWYwBxf0uO8LDcFo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/ethan/JSProjects/CEN4721Project/frontend/src/App.js"],"names":["CalendarView","Header","React","App","backlog","addBacklog","useState","listout","translations","map","array"],"mappings":";;;AAAA;AAEA;AACA,OAAOA,YAAP,MAAyB,wCAAzB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAAQC,KAAR,QAAoB,OAApB;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,GAACC,OAAD,EAAUC,UAAV,IAAwBH,KAAK,CAACI,QAAN,CAAe,EAAf,CAAxB;AACA,QAAMC,OAAO,GAAGC,YAAY,CAACC,GAAb,CAAkBC,KAAD,IAAS;AACtC,QAAGA,KAAK,CAAC,CAAD,CAAL,IAAY,KAAf,EAAqB;AACnB,0BAAO,QAAC,UAAD;AAAY,QAAA,OAAO,EAAEA,KAAK,CAAC,CAAD,CAA1B;AAA+B,QAAA,OAAO,EAAEA,KAAK,CAAC,CAAD;AAA7C;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEK;AACH,0BAAO,QAAC,SAAD;AAAW,QAAA,OAAO,EAAEA,KAAK,CAAC,CAAD,CAAzB;AAA8B,QAAA,OAAO,EAAEA,KAAK,CAAC,CAAD;AAA5C;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AACF,GANa,CAAhB,CAFc,CASd;AACA;AAEA;AACA;AAGA;;AACA;AACJ;AACA;;AAII,sBACI;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CA7BD;;GAAMP,G;;KAAAA,G;AA+BN,eAAeA,GAAf","sourcesContent":["//Styling\r\n\r\n//import Components\r\nimport CalendarView from './components/CalendarView/CalendarView';\r\nimport Header from './components/Header/Header';\r\nimport {React} from 'react';\r\n\r\n\r\nconst App = () => {\r\n    [backlog, addBacklog] = React.useState([]);\r\n    const listout = translations.map((array)=>{\r\n        if(array[2] == \"eng\"){\r\n          return <Transright english={array[0]} foreign={array[1]} />\r\n        }else{\r\n          return <Transleft english={array[0]} foreign={array[1]} />\r\n        }\r\n      });\r\n    //https://reactjs.org/docs/hooks-reference.html#usestateuse\r\n    //const [currentId, setCurrentId] = useState(0);\r\n\r\n    //https://react-redux.js.org/api/hooks\r\n    //const dispatch = useDispatch();\r\n\r\n\r\n    //https://reactjs.org/docs/hooks-reference.html#useeffect\r\n    /*useEffect(() => {\r\n        dispatch(getEvents());\r\n    }, [dispatch]);*/\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <CalendarView/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}