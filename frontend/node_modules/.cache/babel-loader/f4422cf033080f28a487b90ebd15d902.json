{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ethan\\\\JSProjects\\\\CEN4721Project\\\\frontend\\\\src\\\\components\\\\VoiceRecorder\\\\VoiceRecorder.js\";\nimport React, { useState, useEffect } from 'react';\nimport KeyboardVoiceIcon from '@material-ui/icons/KeyboardVoice';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport Fab from '@material-ui/core/Fab';\nimport { Grid } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst recorder = new MicRecorder({\n  bitRate: 128\n});\n\nconst VoiceRecorder = props => {\n  const {\n    onClose,\n    open\n  } = props;\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const startRecording = () => {\n    recorder.start().then(() => {// something else\n    }).catch(e => {\n      console.error(e);\n    });\n  }; // Once you are done singing your best song, stop and get the mp3.\n\n\n  const stopRecording = () => {\n    recorder.stop().getMp3().then(([buffer, blob]) => {\n      // do what ever you want with buffer and blob\n      // Example: Create a mp3 file and play\n      const file = new File(buffer, 'me-at-thevoice.mp3', {\n        type: blob.type,\n        lastModified: Date.now()\n      });\n      const player = new Audio(URL.createObjectURL(file));\n      player.play();\n    }).catch(e => {\n      alert('We could not retrieve your message');\n      console.log(e);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    onClose: handleClose,\n    \"aria-labelledby\": \"voice-record-popup\",\n    open: open,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"voice-record-popup\",\n      children: \"Start a voice recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Fab, {\n        color: \"primary\",\n        \"aria-label\": \"voice-record\",\n        children: /*#__PURE__*/_jsxDEV(KeyboardVoiceIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_c = VoiceRecorder;\nexport default VoiceRecorder;\n\nvar _c;\n\n$RefreshReg$(_c, \"VoiceRecorder\");","map":{"version":3,"sources":["C:/Users/ethan/JSProjects/CEN4721Project/frontend/src/components/VoiceRecorder/VoiceRecorder.js"],"names":["React","useState","useEffect","KeyboardVoiceIcon","DialogTitle","Dialog","Fab","Grid","recorder","MicRecorder","bitRate","VoiceRecorder","props","onClose","open","handleClose","startRecording","start","then","catch","e","console","error","stopRecording","stop","getMp3","buffer","blob","file","File","type","lastModified","Date","now","player","Audio","URL","createObjectURL","play","alert","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,SAASC,IAAT,QAAqB,mBAArB;;AAGA,MAAMC,QAAQ,GAAG,IAAIC,WAAJ,CAAgB;AAC7BC,EAAAA,OAAO,EAAE;AADoB,CAAhB,CAAjB;;AAKA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBF,KAA1B;;AAEA,QAAMG,WAAW,GAAG,MAAM;AACtBF,IAAAA,OAAO;AACV,GAFD;;AAIA,QAAMG,cAAc,GAAG,MAAM;AACzBR,IAAAA,QAAQ,CAACS,KAAT,GAAiBC,IAAjB,CAAsB,MAAM,CACxB;AACH,KAFD,EAEGC,KAFH,CAEUC,CAAD,IAAO;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACH,KAJD;AAKH,GAND,CAP6B,CAgB7B;;;AACA,QAAMG,aAAa,GAAG,MAAM;AACxBf,IAAAA,QAAQ,CACHgB,IADL,GAEKC,MAFL,GAEcP,IAFd,CAEmB,CAAC,CAACQ,MAAD,EAASC,IAAT,CAAD,KAAoB;AAC/B;AACA;AACA,YAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASH,MAAT,EAAiB,oBAAjB,EAAuC;AAChDI,QAAAA,IAAI,EAAEH,IAAI,CAACG,IADqC;AAEhDC,QAAAA,YAAY,EAAEC,IAAI,CAACC,GAAL;AAFkC,OAAvC,CAAb;AAKA,YAAMC,MAAM,GAAG,IAAIC,KAAJ,CAAUC,GAAG,CAACC,eAAJ,CAAoBT,IAApB,CAAV,CAAf;AACAM,MAAAA,MAAM,CAACI,IAAP;AAEH,KAbL,EAaOnB,KAbP,CAacC,CAAD,IAAO;AACZmB,MAAAA,KAAK,CAAC,oCAAD,CAAL;AACAlB,MAAAA,OAAO,CAACmB,GAAR,CAAYpB,CAAZ;AACH,KAhBL;AAiBH,GAlBD;;AAqBA,sBACI,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAEL,WAAjB;AAA8B,uBAAgB,oBAA9C;AAAmE,IAAA,IAAI,EAAED,IAAzE;AAAA,4BACI,QAAC,WAAD;AAAa,MAAA,EAAE,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,SAAS,EAAC,KAA1B;AAAgC,MAAA,OAAO,EAAC,QAAxC;AAAiD,MAAA,UAAU,EAAC,QAA5D;AAAA,6BACI,QAAC,GAAD;AAAK,QAAA,KAAK,EAAC,SAAX;AAAqB,sBAAW,cAAhC;AAAA,+BACI,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAhDD;;KAAMH,a;AAkDN,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport KeyboardVoiceIcon from '@material-ui/icons/KeyboardVoice';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { Grid } from '@material-ui/core';\r\n\r\n\r\nconst recorder = new MicRecorder({\r\n    bitRate: 128\r\n});\r\n\r\n\r\nconst VoiceRecorder = (props) => {\r\n    const { onClose, open } = props;\r\n\r\n    const handleClose = () => {\r\n        onClose()\r\n    };\r\n\r\n    const startRecording = () => {\r\n        recorder.start().then(() => {\r\n            // something else\r\n        }).catch((e) => {\r\n            console.error(e);\r\n        });\r\n    }\r\n\r\n\r\n    // Once you are done singing your best song, stop and get the mp3.\r\n    const stopRecording = () => {\r\n        recorder\r\n            .stop()\r\n            .getMp3().then(([buffer, blob]) => {\r\n                // do what ever you want with buffer and blob\r\n                // Example: Create a mp3 file and play\r\n                const file = new File(buffer, 'me-at-thevoice.mp3', {\r\n                    type: blob.type,\r\n                    lastModified: Date.now()\r\n                });\r\n\r\n                const player = new Audio(URL.createObjectURL(file));\r\n                player.play();\r\n\r\n            }).catch((e) => {\r\n                alert('We could not retrieve your message');\r\n                console.log(e);\r\n            });\r\n    }\r\n\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} aria-labelledby=\"voice-record-popup\" open={open}>\r\n            <DialogTitle id=\"voice-record-popup\">Start a voice recording</DialogTitle>\r\n            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" >\r\n                <Fab color=\"primary\" aria-label=\"voice-record\">\r\n                    <KeyboardVoiceIcon />\r\n                </Fab>\r\n            </Grid>\r\n        </Dialog>);\r\n\r\n};\r\n\r\nexport default VoiceRecorder;\r\n"]},"metadata":{},"sourceType":"module"}